version: '3.8'

services:
  postgres:
    image: postgres:16.3
    environment:
      POSTGRES_USER: DEV_USER
      POSTGRES_PASSWORD: DEV_PASSWORD
      POSTGRES_DB: DEV_DATABASE
    volumes:
      - postgres-data:/var/lib/postgresql/data
#  ngrok:
#    profiles:
#      - dev-only
#    image: ngrok/ngrok:alpine
#    env_file:
#      - .env
#    environment:
#      - NGROK_AUTHTOKEN
#    volumes:
#      - ./ngrok.yml:/etc/ngrok.yml
#    command:
#      - "start"
#      - "--all"
#      - "--config=/etc/ngrok.yml"
#    ports:
#      - "4040:4040"
  nest:
    image: node:22-alpine3.19
    env_file:
      - .env
    environment:
      - DATABASE_URL
      - TELEGRAM_TOKEN
      - DEV_MODE
      - PUBLIC_URL
    ports:
      - "3000:3000"
    working_dir: /app
    volumes:
      - ./packages/backend:/app
    command: sh -c "yarn install && yarn prisma migrate deploy && yarn prisma generate && yarn run build && yarn run start:prod"
    depends_on:
      - postgres
#  remix:
#    image: node:22-alpine3.19
#    working_dir: /app
#    environment:
#      - API_URL=http://nest:3000
#    volumes:
#      - ./packages/frontend:/app
#    command: sh -c "yarn install && yarn run build && yarn run start"
#    depends_on:
#      - nest
#  nginx:
#    image: nginx:1.21.6
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#    ports:
#      - "80:80"
#    depends_on:
#      - nest
#      - remix

volumes:
  postgres-data:
